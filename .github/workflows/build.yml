name: Build .NET SDK

on:
  workflow_dispatch:
    inputs:
      fork:
        description: 'dotnet VMR fork name'
        required: true
        type: string
        default: dotnet
      branch:
        description: 'dotnet VMR branch name'
        required: true
        type: string
        default: main
      release:
        description: 'publish release'
        type: boolean

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v4.1
      with:
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-cached-tools: 'true'

    - name: Clone repository
      run: |
        git clone --single-branch --depth 1 -b ${{ inputs.branch }} https://github.com/${{ inputs.fork }}/dotnet

    - name: Build
      run: |
        docker run --platform linux/amd64 --rm -v${{ github.workspace }}/dotnet:/dotnet -w /dotnet -e ROOTFS_DIR=/crossrootfs/riscv64 \
          mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-riscv64 \
            ./build.sh --clean-while-building --prep -sb --os linux --arch riscv64 -p:OfficialBuildId=$(date +%Y%m%d).99

    - name: List assets directory
      run: |
        find "${{ github.workspace }}/dotnet/artifacts"

    - name: Upload .NET
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-sdk-linux-riscv64
        path: |
          ${{ github.workspace }}/dotnet/artifacts/assets/Release/Sdk/*/dotnet-sdk-*.tar.gz
          ${{ github.workspace }}/dotnet/artifacts/packages/Release/Shipping/runtime/Microsoft.NETCore.App.Crossgen2.linux-riscv64.*.nupkg

    - name: Make release
      if: ${{ inputs.release }}
      run: |
        sudo apt install -y hub

        # hub(1) requires release to be created inside a git repo
        git clone https://${{ secrets.CLONE_TOKEN }}:x-oauth-basic@github.com/${{ github.repository }}.git repo
        cd repo

        sdk_path=$(find ${{ github.workspace }}/dotnet/artifacts/assets/Release/Sdk -name 'dotnet-sdk-*.tar.gz' | head -n1)
        sdk_filename=$(basename "$sdk_path")

        # Extract version: strip prefix/suffix to get e.g. "10.0.100-preview.5.25277.114"
        sdk_version=$(echo "$sdk_filename" | sed -E 's/dotnet-sdk-([^-]+(-[^-]+)*)-linux-.+\.tar\.gz/\1/')

        artifacts=" -a $sdk_path"
        tag_name="$sdk_version"

        echo "tag_name: $tag_name"
        echo "artifacts: $artifacts"

        # docs: https://hub.github.com/hub-release.1.html
        hub release create $artifacts --prerelease -m "$tag_name" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
